format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/jota/IdeaProjects/akka-quickstart-scala/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.2
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
2 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /home/jota/IdeaProjects/akka-quickstart-scala/target/scala-2.12/test-classes/com/lightbend/akka/sample/AkkaQuickstartSpec.class
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /home/jota/IdeaProjects/akka-quickstart-scala/target/scala-2.12/test-classes/com/lightbend/akka/sample/DeviceSpec.class
binary dependencies:
12 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /home/jota/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.3.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /home/jota/.ivy2/cache/com.typesafe.akka/akka-testkit_2.12/jars/akka-testkit_2.12-2.5.3.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /home/jota/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /home/jota/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /home/jota/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> /usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /home/jota/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.3.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /home/jota/.ivy2/cache/com.typesafe.akka/akka-testkit_2.12/jars/akka-testkit_2.12-2.5.3.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /home/jota/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /home/jota/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /home/jota/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> /usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
3 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> com.lightbend.akka.sample.Greeter$
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> com.lightbend.akka.sample.Printer$
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> com.lightbend.akka.sample.Device$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
2 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> com.lightbend.akka.sample.AkkaQuickstartSpec
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> com.lightbend.akka.sample.DeviceSpec
used names:
165 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> !
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> <byname>
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> <init>
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> <repeated>
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Actor
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> ActorRef
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> ActorSystem
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> AkkaQuickstartSpec
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Any
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> BeforeAndAfterAll
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Boolean
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Duration
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> DurationInt
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> FiniteDuration
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> FlatSpecLike
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Greet
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Greeter
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Greeting
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> ImplicitSender
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> InAndIgnoreMethods
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Int
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Matchers
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Nothing
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Position
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Predef
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Prettifier
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Printer
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Props
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> ResultOfStringPassedToVerb
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> ScalaActorRef
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> String
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> StringContext
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> StringShouldWrapper
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> StringVerbStringInvocation
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> T
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> TestActorRef
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> TestKit
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> TestProbe
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> Unit
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> WhoToGreet
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> _system
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> actor
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> actorOf
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> actorRef2Scala
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> akka
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> apply
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> com
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> concurrent
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> convertToInAndIgnoreMethods
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> convertToStringShouldWrapper
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> default
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> duration
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> expectMsg
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> greetPerson
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> helloGreeter
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> helloGreetingMessage
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> here
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> in
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> lightbend
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> millis
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> org
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> package
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> props
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> qual$1
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> qual$2
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> ref
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> s
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> sample
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> scala
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> scalactic
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> scalatest
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> shorthandTestRegistrationFunction
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> should
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> shutdown
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> source
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> system
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> testProbe
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> testkit
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> x$1
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> x$2
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> x$3
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> x$4
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> <byname>
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> <init>
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ===
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> A
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ActorRef
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ActorSystem
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Any
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> AnyShouldWrapper
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Assertion
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> B
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> BeforeAndAfterAll
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Boolean
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> CanEqual
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Class
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ClassTag
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Device
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> DeviceSpec
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Double
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Duration
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Equality
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> FlatSpecLike
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> InAndIgnoreMethods
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Int
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Long
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Matchers
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> None
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Nothing
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Option
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Position
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Predef
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Prettifier
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Props
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ReadTemperature
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> RespondTemperature
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ResultOfStringPassedToVerb
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> String
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> StringShouldWrapper
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> StringVerbStringInvocation
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> T
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> TestKit
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> TestProbe
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> TripleEqualsInvocation
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> TripleEqualsSupport
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> U
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> Unit
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> _$7
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> _system
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> actor
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> actorOf
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> akka
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> apply
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> com
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> convertToAnyShouldWrapper
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> convertToInAndIgnoreMethods
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> convertToStringShouldWrapper
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> default
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> deviceActor
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> expectMsgType
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> here
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> in
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> lightbend
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> materializeClassTag
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> org
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> package
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> probe
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> props
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> ref
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> reflect
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> requestId
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> response
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> sample
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> scala
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> scalactic
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> scalatest
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> shorthandTestRegistrationFunction
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> should
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> shutdown
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> source
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> system
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> tell
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> testkit
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> unconstrainedEquality
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> value
product stamps:
2 items
/home/jota/IdeaProjects/akka-quickstart-scala/target/scala-2.12/test-classes/com/lightbend/akka/sample/AkkaQuickstartSpec.class -> lastModified(1517091176000)
/home/jota/IdeaProjects/akka-quickstart-scala/target/scala-2.12/test-classes/com/lightbend/akka/sample/DeviceSpec.class -> lastModified(1517091239000)
source stamps:
2 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> hash(abf676338dceb1bb544ed090cc48cd610a9f7c43)
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> hash(e5c8d282a5ca85dca265c72dc295df76704e7467)
binary stamps:
6 items
/home/jota/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.3.jar -> lastModified(1497881264000)
/home/jota/.ivy2/cache/com.typesafe.akka/akka-testkit_2.12/jars/akka-testkit_2.12-2.5.3.jar -> lastModified(1497881357000)
/home/jota/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar -> lastModified(1492071552000)
/home/jota/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/home/jota/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
/usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar -> lastModified(1501272673000)
class names:
6 items
/home/jota/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.3.jar -> akka.actor.Props
/home/jota/.ivy2/cache/com.typesafe.akka/akka-testkit_2.12/jars/akka-testkit_2.12-2.5.3.jar -> akka.testkit.TestKit
/home/jota/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar -> scala.Predef$
/home/jota/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.TripleEquals
/home/jota/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.Matchers
/usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar -> java.lang.Class
internal apis:
2 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> 

/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> 

external apis:
3 items
com.lightbend.akka.sample.Device$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwEojL0gAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHCXUUe0dAAEc2VsZnNxAH4AC6+3PxF0AAdjb250ZXh0dXEAfgAJAAAAOXNxAH4AC9FZYsd0AAZub3RpZnlzcQB+AAvzrEFBdAAHdW5hcHBseXNxAH4AC308Wud0AAdjdXJyaWVkc3EAfgALFqtzRXQAB1JlY2VpdmVzcQB+AAv1vAe4dAAEd2FpdHNxAH4AC3eOkrh0AA5jb3B5JGRlZmF1bHQkMnNxAH4ACwk5zEt0AA0kYXNJbnN0YW5jZU9mc3EAfgALD6JwAHQAB2NvbXBvc2VzcQB+AAtlRfHUdAAMcHJvZHVjdEFyaXR5c3EAfgALx3K8VnQABmVxdWFsc3NxAH4ACy7i3CB0AAxhc0luc3RhbmNlT2ZzcQB+AAsuad9fdAAGRGV2aWNlc3EAfgALT5+B13QADHN5bmNocm9uaXplZHNxAH4ACzKJj/10AA0kaXNJbnN0YW5jZU9mc3EAfgALcj/gq3QAB2FuZFRoZW5zcQB+AAuzMvM2dAAHcmVjZWl2ZXNxAH4ACy4SJ3l0AApwcmVSZXN0YXJ0c3EAfgALHA4NunQABnR1cGxlZHNxAH4ACxnDi2h0AA1hcm91bmRSZWNlaXZlc3EAfgALUtDZInQACGNhbkVxdWFsc3EAfgALPq5Da3QAC3Bvc3RSZXN0YXJ0c3EAfgALsV3AmXQACHBvc3RTdG9wc3EAfgALDa0QC3QADXByb2R1Y3RQcmVmaXhzcQB+AAsWbXiLdAAJbm90aWZ5QWxsc3EAfgAL0Gwp4XQAEWFyb3VuZFBvc3RSZXN0YXJ0c3EAfgALPFkqsHQADGlzSW5zdGFuY2VPZnNxAH4AC8TDlR50ABBhcm91bmRQcmVSZXN0YXJ0c3EAfgALsY3GKHQADmFyb3VuZFBvc3RTdG9wc3EAfgALqRj1m3QABjxpbml0PnNxAH4AC7T1sVh0AAhwcmVTdGFydHNxAH4AC9mkqHZ0AAl1bmhhbmRsZWRzcQB+AAubhKt6dAAFYXBwbHlzcQB+AAvOl4uDdAACPT1zcQB+AAssY0/WdAAFY2xvbmVzcQB+AAuDxQIZdAAWbGFzdFRlbXBlcmF0dXJlUmVhZGluZ3NxAH4AC8UAqKN0AAYkaW5pdCRzcQB+AAt+zVZGdAAEY29weXNxAH4AC1eCjWJ0AAZzZW5kZXJzcQB+AAsecc+8dAAJcmVxdWVzdElkc3EAfgALjyZRbXQACHRvU3RyaW5nc3EAfgALybPP+nQAAiE9c3EAfgALlljURnQACGdldENsYXNzc3EAfgAL6O5cYXQAD1JlYWRUZW1wZXJhdHVyZXNxAH4AC8dV5id0AA5jb3B5JGRlZmF1bHQkMXNxAH4AC+B9pu10AAVwcm9wc3NxAH4AC2j9N1N0ABJSZXNwb25kVGVtcGVyYXR1cmVzcQB+AAtXPTxydAACbmVzcQB+AAsbZty1dAAFdmFsdWVzcQB+AAuTNRGFdAASc3VwZXJ2aXNvclN0cmF0ZWd5c3EAfgALVQI9jXQAAmVxc3EAfgALR/WmxnQAD3Byb2R1Y3RJdGVyYXRvcnNxAH4AC5oBm1N0AANsb2dzcQB+AAvZT8BQdAACIyNzcQB+AAsLK1pSdAAIZmluYWxpemVzcQB+AAvVLYxBdAAOcHJvZHVjdEVsZW1lbnRzcQB+AAvOAYTNdAAIaGFzaENvZGVzcQB+AAvUkKr5dAAOYXJvdW5kUHJlU3RhcnRzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgCNeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAgY29tLmxpZ2h0YmVuZC5ha2thLnNhbXBsZS5EZXZpY2V1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AKVzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AjUwACWluaGVyaXRlZHEAfgCNTAAHcGFyZW50c3EAfgCNeHEAfgCqc3EAfgCldXEAfgCIAAAAAHNxAH4ApXVxAH4AiAAAAABzcQB+AKV1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADEwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AKl0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AKlzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgAMeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AMJ0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AMNzcQB+ALZ0AANBbnlzcQB+ALpzcQB+AL11cQB+AMAAAAACc3EAfgDCdAAFc2NhbGFxAH4AyXNxAH4AinEAfgCXdXEAfgCYAAAAAHNxAH4AmgB0ACBjb20ubGlnaHRiZW5kLmFra2Euc2FtcGxlLkRldmljZXVxAH4AnQAAAAB+cQB+AJ90AAhDbGFzc0RlZnVxAH4AowAAAABzcQB+AKVxAH4Aq3NxAH4ApXNxAH4ArXNxAH4ApXVxAH4AiAAAAABzcQB+AKV1cQB+AIgAAAAAc3EAfgCldXEAfgC0AAAABHNxAH4AtnQADEFjdG9yTG9nZ2luZ3NxAH4AunNxAH4AvXVxAH4AwAAAAANzcQB+AMJ0AARha2thc3EAfgDCdAAFYWN0b3JxAH4AyXNxAH4AtnQABUFjdG9ycQB+AORzcQB+ALZxAH4AuXNxAH4AunNxAH4AvXVxAH4AwAAAAANzcQB+AMJxAH4AxXNxAH4AwnEAfgDHcQB+AMlzcQB+ALZxAH4Ay3NxAH4AunNxAH4AvXVxAH4AwAAAAAJzcQB+AMJxAH4A0HEAfgDJdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADHhwdAAZY29tLmxpZ2h0YmVuZC5ha2thLnNhbXBsZXNxAH4A+nQAEmNvbS5saWdodGJlbmQuYWtrYXNxAH4A+nQAA2NvbXNxAH4A+nQADWNvbS5saWdodGJlbmRzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAWE5rhNrdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgAMTAAPc291cmNlRGlyZWN0b3J5cQB+AAx4cHQARy9ob21lL2pvdGEvSWRlYVByb2plY3RzL2Fra2EtcXVpY2tzdGFydC1zY2FsYS90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUSSmCtIPCRm0NVnfaGPQCdRBh5Bs=
com.lightbend.akka.sample.Greeter$ -> 

com.lightbend.akka.sample.Printer$ -> 

source infos:
2 items
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/AkkaQuickstartSpec.scala -> 
AAAAAAAAAAA=
/home/jota/IdeaProjects/akka-quickstart-scala/src/test/scala/com/lightbend/akka/sample/DeviceSpec.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYTmuM+Z1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9ob21lL2pvdGEvSWRlYVByb2plY3RzL2Fra2EtcXVpY2tzdGFydC1zY2FsYS90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYTmvHPN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9ob21lL2pvdGEvSWRlYVByb2plY3RzL2Fra2EtcXVpY2tzdGFydC1zY2FsYS90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
